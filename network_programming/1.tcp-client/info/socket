NAME
       socket - create an endpoint for communication

SYNOPSIS
       #include <sys/types.h>          /* See NOTES */
       #include <sys/socket.h>

       int socket(int domain, int type, int protocol);

socket() creates an endpoint for communication and returns a file descriptor 
that refers to that endpoint.  
The file descriptor 
returned by a successful call will be the lowest-numbered 
file descriptor not currently open for the process.

The domain argument specifies a communication domain; 
this selects the protocol family which will be used for communication.
These families are defined in <sys/socket.h>.  
The formats currently understood by the Linux kernel include:

       AF_UNIX      Local communication                        unix(7)
----------------------------------------------------------------------------       
       AF_LOCAL         Synonym for AF_UNIX
----------------------------------------------------------------------------       
       AF_INET          IPv4 Internet protocols                    ip(7)
----------------------------------------------------------------------------       
       AF_AX25          Amateur radio AX.25 protocol               ax25(4)
----------------------------------------------------------------------------       
       AF_IPX           IPX - Novell protocols
----------------------------------------------------------------------------       
       AF_APPLETALK     AppleTalk                                  ddp(7)
----------------------------------------------------------------------------       
       AF_X25           ITU-T X.25 / ISO-8208 protocol             x25(7)
----------------------------------------------------------------------------       
       AF_INET6         IPv6 Internet protocols                    ipv6(7)
----------------------------------------------------------------------------       
       AF_DECnet        DECet protocol sockets
----------------------------------------------------------------------------       
       AF_KEY           Key  management protocol, originally 
                        developed for usage with IPsec
       AF_NETLINK       Kernel user interface device               netlink(7)
       AF_PACKET        Low-level packet interface                 packet(7)
       AF_RDS           Reliable Datagram Sockets (RDS) protocol   rds(7)
                                                                   rds-rdma(7)
       AF_PPPOX         Generic PPP transport layer, for setting
                        up L2 tunnels (L2TP and PPPoE)
       AF_LLC           Logical  link  control  (IEEE 802.2 LLC)
                        protocol
       AF_IB            InfiniBand native addressing
       AF_MPLS          Multiprotocol Label Switching
       AF_CAN           Controller Area Network  automotive  bus
                        protocol
       AF_TIPC          TIPC, "cluster domain sockets" protocol
       AF_BLUETOOTH     Bluetooth low-level socket protocol
       AF_ALG           Interface to kernel crypto API
       AF_VSOCK         VSOCK   (originally  "VMWare  VSockets")   vsock(7)
                        protocol for hypervisor-guest communication
                        
       AF_KCM           KCM  (kernel connection multiplexer) interface
                        
       AF_XDP           XDP (express data path) interface


The socket has the indicated type, which specifies the communication semantics.  
Currently defined types are:

       SOCK_STREAM     Provides  sequenced,  reliable, two-way, connection-based byte streams.  
       An out-of-band data transmission mechanism may be supported.

       SOCK_DGRAM      Supports datagrams 
       (connectionless, unreliable messages of a fixed maximum length).

       SOCK_SEQPACKET  Provides a sequenced, reliable, two-way connection-based data 
       transmission path  for  datagrams  of  fixed  maximum
       length; a consumer is required to read an entire packet with each input system call.

       SOCK_RAW        Provides raw network protocol access.

       SOCK_RDM        Provides a reliable datagram layer that does not guarantee ordering.

       SOCK_PACKET     Obsolete and should not be used in new programs; see packet(7).


